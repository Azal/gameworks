<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="Gameworks2">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../eclipse"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/plugins/org.junit_4.10.0.v4_10_0_v20120426-0900/junit.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.hamcrest.core_1.1.0.v20090501071000.jar"/>
    </path>
    <path id="Gameworks2.classpath">
        <pathelement location="."/>
        <path refid="JUnit 4.libraryclasspath"/>
    </path>
    <target name="init">
        <copy includeemptydirs="false" todir=".">
            <fileset dir=".">
                <exclude name="**/*.java"/>
            <!--  as the first entry and export the buildfile again. -->
            <project basedir="." default="build" name="gameworks">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="D:/eclipse-SDK-4.2.2-win32-x86_64/eclipse"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
    <path id="gameworks.classpath">
            <!--    as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="proyecto_eclipse">
    <property environment="env"/>
    <property name="src.link" value="../proyecto/src"/>
    <property name="ECLIPSE_HOME" value="../../../../../../Applications/eclipse JAVA"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <path id="proyecto_eclipse.classpath">
        <pathelement location="bin"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir=".">
                <exclude name="**/*.java"/>
                <exclude name="GameworksEvents/src/"/>
                <exclude name="Persistence/tests/"/>
                <exclude name="Persistence/src/"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="GameworksEvents/src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="Persistence/src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="Persistence/tests">
            <fileset dir="${src.link}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete>
            <fileset dir="." includes="**/*.class"/>
        </delete>
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="." includeantruntime="false" source="${source}" target="${target}">
            <src path="."/>
            <classpath refid="Gameworks2.classpath"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="."/>
            <src path="GameworksEvents/src"/>
            <src path="Persistence/src"/>
            <src path="Persistence/tests"/>
            <exclude name="GameworksEvents/src/"/>
            <exclude name="Persistence/tests/"/>
            <exclude name="Persistence/src/"/>
            <classpath refid="gameworks.classpath"/>
            <src path="${src.link}"/>
            <classpath refid="proyecto_eclipse.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="ConnectionTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="src.Network.ConnectionTest" todir="${junit.output.dir}"/>
            <classpath refid="Gameworks2.classpath"/>
        </junit>
    </target>
    <target name="Main (3)">
        <java classname="src.Main" failonerror="true" fork="yes">
            <classpath refid="Gameworks2.classpath"/>
        </java>
    </target>
    <target name="Main (4)">
        <java classname="src.Network.Main" failonerror="true" fork="yes">
            <classpath refid="Gameworks2.classpath"/>
        </java>
    </target>
    <target name="ReceiverTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="src.Network.ReceiverTest" todir="${junit.output.dir}"/>
            <classpath refid="Gameworks2.classpath"/>
    <target name="CharacterTest (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="src.Scenery.CharacterTest" todir="${junit.output.dir}"/>
            <classpath refid="gameworks.classpath"/>
        </junit>
    </target>
    <target name="CharacterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="scenery.CharacterTest" todir="${junit.output.dir}"/>
            <classpath refid="gameworks.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>

	  <target name="GameworksTest">
	        <mkdir dir="${junit.output.dir}"/>
	        <junit fork="yes" printsummary="withOutAndErr">
	            <formatter type="xml"/>
	            <test name="GameworksEvents.src.events_test" todir="${junit.output.dir}"/>
	            <classpath refid="gameworks.classpath"/>
	        </junit>
	    </target>
</project>
